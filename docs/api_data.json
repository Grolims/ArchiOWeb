[
  {
    "type": "post",
    "url": "/api/items",
    "title": "Create a item",
    "name": "CreateItem",
    "group": "Item",
    "version": "1.0.0",
    "description": "<p>Registers a new Item.</p>",
    "success": {
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>A unique identifier for the Item generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the item (must be unique)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>URL of the item's picture</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the item</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "201 Created",
          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://comem-rest-demo.herokuapp.com/api/item/58b2926f5e1def0123e97bc0\n\n{\n  \"username\": \"Kestar\",\n  \"admin\": true,\n  \"_id\": \"61912511d1f3e541d9a2177c\",\n  \"registrationdate\": \"2021-11-14T15:02:41.974Z\",\n  \"__v\": 0\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example",
        "content": "POST /api/items HTTP/1.1\nContent-Type: application/json\n\n{\n  \"username\": \"Kestar\",\n  \"admin\": true,\n  \"password\": \"1234test\"\n}",
        "type": "json"
      }
    ],
    "filename": "routes/items.js",
    "groupTitle": "Item",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the item (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the item</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>Picture of the item</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the item</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the item</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the item</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the Item's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Item validation failed\",\n  \"errors\": {\n    \"label\": {\n      \"kind\": \"enum\",\n      \"message\": \"`test` is not a valid enum value for path `label`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"label\",\n      \"properties\": {\n        \"enumValues\": [\n          \"Bio\",\n          \"Vegan\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"label\",\n        \"type\": \"enum\",\n        \"value\": \"test\"\n      },\n      \"value\": \"test\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "delete",
    "url": "/api/items/:id",
    "title": "Delete a item",
    "name": "DeleteItem",
    "group": "Item",
    "version": "1.0.0",
    "description": "<p>Permanently deletes a item</p>",
    "examples": [
      {
        "title": "Example",
        "content": "DELETE /api/items/58b2926f5e1def0123e97bc0 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "204 No Content",
          "content": "HTTP/1.1 204 No Content",
          "type": "json"
        }
      ]
    },
    "filename": "routes/items.js",
    "groupTitle": "Item"
  },
  {
    "type": "patch",
    "url": "/api/items/:id",
    "title": "Partially update a item",
    "name": "PartiallyUpdateItem",
    "group": "Item",
    "version": "1.0.0",
    "description": "<p>Partially updates a item's data (only the properties found in the request body will be updated). All properties are optional.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PATCH /api/items/619126a15f69d38480a2a49f HTTP/1.1\nContent-Type: application/json\n\n{\n  \"price\": 2\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"619126a15f69d38480a2a49f\",\n  \"name\": \"Drink new Gen\",\n  \"type\": \"Boissons\",\n  \"picture\": \"URLAMETTRE\",\n  \"price\": 2, \n  \"description\": \"A new generation of drinks\",\n  \"label\": \"Vegan\", \n  \"userId\": \"619126a15f69d38480a2a49f\",\n  \"creationdate\": \"2021-10-14T15:09:21.935Z\",\n  \"lastModified\": \"2021-11-14T15:14:21.935Z\",\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the Item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the item (must be unique)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>URL of the item's picture</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the item</p>"
          }
        ]
      }
    },
    "filename": "routes/items.js",
    "groupTitle": "Item",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the item to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the item (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the item</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>Picture of the item</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the item</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the item</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the item</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No Item was found corresponding to the ID in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the Item's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo Item found with ID 58b2926f5e1def0123e97bc0",
          "type": "json"
        },
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Item validation failed\",\n  \"errors\": {\n    \"label\": {\n      \"kind\": \"enum\",\n      \"message\": \"`test` is not a valid enum value for path `label`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"label\",\n      \"properties\": {\n        \"enumValues\": [\n          \"Bio\",\n          \"Vegan\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"label\",\n        \"type\": \"enum\",\n        \"value\": \"test\"\n      },\n      \"value\": \"test\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/api/items",
    "title": "List item",
    "name": "RetrieveItem",
    "group": "Item",
    "version": "1.0.0",
    "description": "<p>Retrieves a paginated list of item sorted by name (in alphabetical order).</p>",
    "parameter": {
      "fields": {
        "URL query parameters": [
          {
            "group": "URL query parameters",
            "type": "String",
            "optional": true,
            "field": "gender",
            "description": "<p>Select only item of the specified gender</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example",
        "content": "GET /api/items?gender=male&page=2&pageSize=50 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n    Link: &lt;https://comem-rest-demo.herokuapp.com/api/items?page=1&pageSize=50&gt;; rel=\"first prev\"\n\n{\n \"page\": 1,\n \"pageSize\": 100,\n \"total\": 2,\n \"data\": [\n     {\n         \"_id\": \"61912511d1f3e541d9a2177c\",\n         \"username\": \"Kestar\",\n         \"admin\": true,\n         \"registrationdate\": \"2021-11-14T15:02:41.974Z\",\n         \"__v\": 0\n     },\n     {\n         \"_id\": \"619126a15f69d38480a2a49f\",\n         \"username\": \"Mikvester\",\n         \"admin\": false,\n         \"registrationdate\": \"2021-11-14T15:09:21.935Z\",\n         \"__v\": 0\n     }\n  ]\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the Item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the item (must be unique)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>URL of the item's picture</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the item</p>"
          }
        ]
      }
    },
    "filename": "routes/items.js",
    "groupTitle": "Item"
  },
  {
    "type": "get",
    "url": "/api/items/:id",
    "title": "GET item by id and associated items & salepoints",
    "name": "RetrieveItem",
    "group": "Item",
    "version": "1.0.0",
    "description": "<p>Retrieves one item.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /api/items/58b2926f5e1def0123e97bc0 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"61912511d1f3e541d9a2177c\",\n  \"username\": \"Kestar\",\n  \"admin\": true,\n  \"registrationdate\": \"2021-11-14T15:02:41.974Z\",\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the Item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the item (must be unique)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>URL of the item's picture</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the item</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the item</p>"
          }
        ]
      }
    },
    "filename": "routes/items.js",
    "groupTitle": "Item",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the item to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No Item was found corresponding to the ID in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo Item found with ID 58b2926f5e1def0123e97bc0",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/api/salepoints",
    "title": "Create a salepoint",
    "name": "CreateSalepoint",
    "group": "Salepoint",
    "version": "1.0.0",
    "description": "<p>Registers a new salepoint.</p>",
    "success": {
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>A unique identifier for the salepoint generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the Salepoint (must be unique)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>URL of the Salepoint's picture</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the Salepoint</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "201 Created",
          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://comem-rest-demo.herokuapp.com/api/salepoints/58b2926f5e1def0123e97bc0\n\n{\n  \"username\": \"Kestar\",\n  \"admin\": true,\n  \"_id\": \"61912511d1f3e541d9a2177c\",\n  \"registrationdate\": \"2021-11-14T15:02:41.974Z\",\n  \"__v\": 0\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example",
        "content": "POST /api/salepoints HTTP/1.1\nContent-Type: application/json\n\n{\n  \"username\": \"Kestar\",\n  \"admin\": true,\n  \"password\": \"1234test\"\n}",
        "type": "json"
      }
    ],
    "filename": "routes/salepoints.js",
    "groupTitle": "Salepoint",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the Salepoint (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the Salepoint</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>Picture of the Salepoint</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the Salepoint</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the Salepoint</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the Salepoint</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the Salepoint's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Salepoint validation failed\",\n  \"errors\": {\n    \"label\": {\n      \"kind\": \"enum\",\n      \"message\": \"`test` is not a valid enum value for path `label`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"label\",\n      \"properties\": {\n        \"enumValues\": [\n          \"Bio\",\n          \"Vegan\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"label\",\n        \"type\": \"enum\",\n        \"value\": \"test\"\n      },\n      \"value\": \"test\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "delete",
    "url": "/api/salepoints/:id",
    "title": "Delete a salepoint",
    "name": "DeleteSalepoint",
    "group": "Salepoint",
    "version": "1.0.0",
    "description": "<p>Permanently deletes a salepoint</p>",
    "examples": [
      {
        "title": "Example",
        "content": "DELETE /api/salepoints/58b2926f5e1def0123e97bc0 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "204 No Content",
          "content": "HTTP/1.1 204 No Content",
          "type": "json"
        }
      ]
    },
    "filename": "routes/salepoints.js",
    "groupTitle": "Salepoint"
  },
  {
    "type": "patch",
    "url": "/api/salepoints/:id",
    "title": "Partially update a salepoint",
    "name": "PartiallyUpdateSalepoint",
    "group": "Salepoint",
    "version": "1.0.0",
    "description": "<p>Partially updates a salepoint's data (only the properties found in the request body will be updated). All properties are optional.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PATCH /api/salepoints/619126a15f69d38480a2a49f HTTP/1.1\nContent-Type: application/json\n\n{\n  \"price\": 2\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"619126a15f69d38480a2a49f\",\n  \"name\": \"Drink new Gen\",\n  \"type\": \"Boissons\",\n  \"picture\": \"URLAMETTRE\",\n  \"price\": 2, \n  \"description\": \"A new generation of drinks\",\n  \"label\": \"Vegan\", \n  \"userId\": \"619126a15f69d38480a2a49f\",\n  \"creationdate\": \"2021-10-14T15:09:21.935Z\",\n  \"lastModified\": \"2021-11-14T15:14:21.935Z\",\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the Salepoint (must be unique)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>URL of the Salepoint's picture</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the Salepoint</p>"
          }
        ]
      }
    },
    "filename": "routes/salepoints.js",
    "groupTitle": "Salepoint",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the Salepoint to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the Salepoint (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the Salepoint</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>Picture of the Salepoint</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the Salepoint</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the Salepoint</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the Salepoint</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No Salepoint was found corresponding to the ID in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the Salepoint's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo Salepoint found with ID 58b2926f5e1def0123e97bc0",
          "type": "json"
        },
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"Salepoint validation failed\",\n  \"errors\": {\n    \"label\": {\n      \"kind\": \"enum\",\n      \"message\": \"`test` is not a valid enum value for path `label`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"label\",\n      \"properties\": {\n        \"enumValues\": [\n          \"Bio\",\n          \"Vegan\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"label\",\n        \"type\": \"enum\",\n        \"value\": \"test\"\n      },\n      \"value\": \"test\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/api/salepoints",
    "title": "List salepoint",
    "name": "RetrieveSalepoint",
    "group": "Salepoint",
    "version": "1.0.0",
    "description": "<p>Retrieves a paginated list of Salepoint sorted by name (in alphabetical order).</p>",
    "parameter": {
      "fields": {
        "URL query parameters": [
          {
            "group": "URL query parameters",
            "type": "String",
            "optional": true,
            "field": "gender",
            "description": "<p>Select only Salepoint of the specified gender</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example",
        "content": "GET /api/salepoints?gender=male&page=2&pageSize=50 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n    Link: &lt;https://comem-rest-demo.herokuapp.com/api/salepoints?page=1&pageSize=50&gt;; rel=\"first prev\"\n\n{\n \"page\": 1,\n \"pageSize\": 100,\n \"total\": 2,\n \"data\": [\n     {\n         \"_id\": \"61912511d1f3e541d9a2177c\",\n         \"username\": \"Kestar\",\n         \"admin\": true,\n         \"registrationdate\": \"2021-11-14T15:02:41.974Z\",\n         \"__v\": 0\n     },\n     {\n         \"_id\": \"619126a15f69d38480a2a49f\",\n         \"username\": \"Mikvester\",\n         \"admin\": false,\n         \"registrationdate\": \"2021-11-14T15:09:21.935Z\",\n         \"__v\": 0\n     }\n  ]\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the Salepoint (must be unique)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>URL of the Salepoint's picture</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the Salepoint</p>"
          }
        ]
      }
    },
    "filename": "routes/salepoints.js",
    "groupTitle": "Salepoint"
  },
  {
    "type": "get",
    "url": "/api/salepoints/:id",
    "title": "GET salepoint by id and associated items & salepoints",
    "name": "RetrieveSalepoint",
    "group": "Salepoint",
    "version": "1.0.0",
    "description": "<p>Retrieves one Salepoint.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /api/salepoints/58b2926f5e1def0123e97bc0 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"61912511d1f3e541d9a2177c\",\n  \"username\": \"Kestar\",\n  \"admin\": true,\n  \"registrationdate\": \"2021-11-14T15:02:41.974Z\",\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "name",
            "description": "<p>The name of the Salepoint (must be unique)</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes', 'Céréales', 'Boissons', 'Autre'",
            "optional": false,
            "field": "type",
            "description": "<p>Type of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "picture",
            "description": "<p>URL of the Salepoint's picture</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "price",
            "description": "<p>Price of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "max 300",
            "optional": false,
            "field": "description",
            "description": "<p>Description of the Salepoint</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "size": "'Fruit', 'Viande', 'Légumes'",
            "optional": false,
            "field": "label",
            "description": "<p>Label of the Salepoint</p>"
          }
        ]
      }
    },
    "filename": "routes/salepoints.js",
    "groupTitle": "Salepoint",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the Salepoint to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No Salepoint was found corresponding to the ID in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo Salepoint found with ID 58b2926f5e1def0123e97bc0",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "post",
    "url": "/api/users",
    "title": "Create a user",
    "name": "CreateUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Registers a new user.</p>",
    "success": {
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>A unique identifier for the user generated by the server</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>The username of the User</p>"
          },
          {
            "group": "Response body",
            "type": "Boolean",
            "optional": false,
            "field": "admin",
            "description": "<p>Is an admin account or not</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "registrationdate",
            "description": "<p>The registration date of the User</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "201 Created",
          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://comem-rest-demo.herokuapp.com/api/users/61912511d1f3e541d9a2177c\n\n{\n  \"username\": \"Kestar\",\n  \"admin\": true,\n  \"_id\": \"61912511d1f3e541d9a2177c\",\n  \"registrationdate\": \"2021-11-14T15:02:41.974Z\",\n  \"__v\": 0\n}",
          "type": "json"
        }
      ]
    },
    "examples": [
      {
        "title": "Example",
        "content": "POST /api/users HTTP/1.1\nContent-Type: application/json\n\n{\n  \"username\": \"Kestar\",\n  \"admin\": true,\n  \"password\": \"1234test\"\n}",
        "type": "json"
      }
    ],
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "username",
            "description": "<p>The username of the User (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "Boolean",
            "optional": false,
            "field": "admin",
            "description": "<p>Is an admin account or not</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "min 8",
            "optional": false,
            "field": "password",
            "description": "<p>Password of the account</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the User's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"User validation failed\",\n  \"errors\": {\n    \"gender\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `gender`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"gender\",\n      \"properties\": {\n        \"enumValues\": [\n          \"male\",\n          \"female\",\n          \"other\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"gender\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "delete",
    "url": "/api/users/:id",
    "title": "Delete a user",
    "name": "DeleteUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Permanently deletes a user</p>",
    "examples": [
      {
        "title": "Example",
        "content": "DELETE /api/users/58b2926f5e1def0123e97bc0 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "204 No Content",
          "content": "HTTP/1.1 204 No Content",
          "type": "json"
        }
      ]
    },
    "filename": "routes/users.js",
    "groupTitle": "User"
  },
  {
    "type": "patch",
    "url": "/api/users/:id",
    "title": "Partially update a user",
    "name": "PartiallyUpdateUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Partially updates a user's data (only the properties found in the request body will be updated). All properties are optional.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "PATCH /api/users/58b2926f5e1def0123e97bc0 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"username\": \"Mikvester\"\n}",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"619126a15f69d38480a2a49f\",\n  \"username\": \"Mikvester\",\n  \"admin\": true,\n  \"registrationdate\": \"2021-11-14T15:09:21.935Z\",\n  \"__v\": 0\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>The username of the User</p>"
          },
          {
            "group": "Response body",
            "type": "Boolean",
            "optional": false,
            "field": "admin",
            "description": "<p>Is an admin account or not</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the User</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "registrationdate",
            "description": "<p>The registration date of the User</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the User to retrieve</p>"
          }
        ],
        "Request body": [
          {
            "group": "Request body",
            "type": "String",
            "size": "3..30",
            "optional": false,
            "field": "username",
            "description": "<p>The username of the User (must be unique)</p>"
          },
          {
            "group": "Request body",
            "type": "Boolean",
            "optional": false,
            "field": "admin",
            "description": "<p>Is an admin account or not</p>"
          },
          {
            "group": "Request body",
            "type": "String",
            "size": "min 8",
            "optional": false,
            "field": "password",
            "description": "<p>Password of the account</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No User was found corresponding to the ID in the URL path</p>"
          },
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "422/UnprocessableEntity",
            "description": "<p>Some of the User's properties are invalid</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo User found with ID 58b2926f5e1def0123e97bc0",
          "type": "json"
        },
        {
          "title": "422 Unprocessable Entity",
          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"User validation failed\",\n  \"errors\": {\n    \"gender\": {\n      \"kind\": \"enum\",\n      \"message\": \"`foo` is not a valid enum value for path `gender`.\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"gender\",\n      \"properties\": {\n        \"enumValues\": [\n          \"male\",\n          \"female\",\n          \"other\"\n        ],\n        \"message\": \"`{VALUE}` is not a valid enum value for path `{PATH}`.\",\n        \"path\": \"gender\",\n        \"type\": \"enum\",\n        \"value\": \"foo\"\n      },\n      \"value\": \"foo\"\n    }\n  }\n}",
          "type": "json"
        }
      ]
    }
  },
  {
    "type": "get",
    "url": "/api/users",
    "title": "List user",
    "name": "RetrieveUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Retrieves a paginated list of user sorted by name (in alphabetical order).</p>",
    "parameter": {
      "fields": {
        "URL query parameters": [
          {
            "group": "URL query parameters",
            "type": "String",
            "optional": true,
            "field": "gender",
            "description": "<p>Select only user of the specified gender</p>"
          }
        ]
      }
    },
    "examples": [
      {
        "title": "Example",
        "content": "GET /api/users?gender=male&page=2&pageSize=50 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "    HTTP/1.1 200 OK\n    Content-Type: application/json\n    Link: &lt;https://comem-rest-demo.herokuapp.com/api/users?page=1&pageSize=50&gt;; rel=\"first prev\"\n\n{\n \"page\": 1,\n \"pageSize\": 100,\n \"total\": 2,\n \"data\": [\n     {\n         \"_id\": \"61912511d1f3e541d9a2177c\",\n         \"username\": \"Kestar\",\n         \"admin\": true,\n         \"registrationdate\": \"2021-11-14T15:02:41.974Z\",\n         \"__v\": 0\n     },\n     {\n         \"_id\": \"619126a15f69d38480a2a49f\",\n         \"username\": \"Mikvester\",\n         \"admin\": false,\n         \"registrationdate\": \"2021-11-14T15:09:21.935Z\",\n         \"__v\": 0\n     }\n  ]\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>The username of the User</p>"
          },
          {
            "group": "Response body",
            "type": "Boolean",
            "optional": false,
            "field": "admin",
            "description": "<p>Is an admin account or not</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the User</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "registrationdate",
            "description": "<p>The registration date of the User</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User"
  },
  {
    "type": "get",
    "url": "/api/users/:id",
    "title": "GET user by id and associated items & salepoints",
    "name": "RetrieveUser",
    "group": "User",
    "version": "1.0.0",
    "description": "<p>Retrieves one user.</p>",
    "examples": [
      {
        "title": "Example",
        "content": "GET /api/users/58b2926f5e1def0123e97bc0 HTTP/1.1",
        "type": "json"
      }
    ],
    "success": {
      "examples": [
        {
          "title": "200 OK",
          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"_id\": \"61912511d1f3e541d9a2177c\",\n  \"username\": \"Kestar\",\n  \"admin\": true,\n  \"registrationdate\": \"2021-11-14T15:02:41.974Z\",\n}",
          "type": "json"
        }
      ],
      "fields": {
        "Response body": [
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "username",
            "description": "<p>The username of the User</p>"
          },
          {
            "group": "Response body",
            "type": "Boolean",
            "optional": false,
            "field": "admin",
            "description": "<p>Is an admin account or not</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the User</p>"
          },
          {
            "group": "Response body",
            "type": "String",
            "optional": false,
            "field": "registrationdate",
            "description": "<p>The registration date of the User</p>"
          }
        ]
      }
    },
    "filename": "routes/users.js",
    "groupTitle": "User",
    "parameter": {
      "fields": {
        "URL path parameters": [
          {
            "group": "URL path parameters",
            "type": "String",
            "optional": false,
            "field": "id",
            "description": "<p>The unique identifier of the User to retrieve</p>"
          }
        ]
      }
    },
    "error": {
      "fields": {
        "Error 4xx": [
          {
            "group": "Error 4xx",
            "type": "Object",
            "optional": false,
            "field": "404/NotFound",
            "description": "<p>No User was found corresponding to the ID in the URL path</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "404 Not Found",
          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo User found with ID 58b2926f5e1def0123e97bc0",
          "type": "json"
        }
      ]
    }
  }
]
